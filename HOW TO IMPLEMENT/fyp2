1. SUMO for web traffic (osmWebWizard.py)
2. Convert this into mobility.tcl file and that can be loaded to vanet-routing-compare.cc file (as discussed in part1)
3. We will be analysing various metrics like 
 Receive Rate
 Packets Received
 Mac PHY overhead
 Packetloss
 Throughput and other metrics.
Files that are generated
mobility.tcl (for generating traffic in the network)
.tr (Ascii Trace, throughput and goodput)
.flowmon (FlowMonitor)
.xml (for NetAnim)
.pcap (Wireshark)

Step 1 - SUMO

$] export SUMO_HOME=/home/sami/sumo/
$] cd sumo/tools
$] python osmWebWizard.py

Once the data generated

$] sumo -c osm.sumocfg --fcd-output trace.xml
sumo has a traceExporter.py file, this file has to be processed.


$]  python traceExporter.py -i 2019-08-18-20-47-08/trace.xml --ns2mobility-output=/home/pradeepkumar/mobility.tcl

from the mobility.tcl file,there are 
32 nodes (vehicles) and 249 seconds

Step 2:
NS3 part
Copy the file vanet-routing-compare.cc file to the scratch folder. 
$] cp ns-allinone-3.27/ns-3.27/src/wave/examples/vanet-routing-compare.cc ns-allinone-3.27/ns-3.27/scratch/

Do the modifications in line numbe 2392 as indicated in the video

My simulation will be running for various protocols like OLSR, AODV and DSDV
Scenario 2 is used for Selaiyur, Tambaram, Chennai, India
Total time is 30 seconds 
Vehicle movement is 20m/s

$] ./waf --run "scratch/vanet-routing-compare --protocol=1 --scenario=2"
1 - OLSR 
2- AODV
3- DSDV
4. DSR


To process the results, we used gnuplot and LibreOFfice Spreadsheet
Gnuplot Code.

set terminal pdf
set output "RR.pdf"
set title "Receive Rate"
set xlabel "Simulation Time (Seconds)"
set ylabel "Receive Rate"
plot "AODV.csv" using 1:2 with linespoints title "AODV", "OLSR.csv" using 1:2 with linespoints title "OLSR","DSDV.csv" using 1:2 with linespoints title "DSDV","DSR.csv" using 1:2 with linespoints title "DSR" 

set terminal pdf
set output "PR.pdf"
set title "Packets Receives"
set xlabel "Simulation Time (Seconds)"
set ylabel "PAckets Received"
plot "AODV.csv" using 1:3 with linespoints title "AODV", "OLSR.csv" using 1:3 with linespoints title "OLSR","DSDV.csv" using 1:3 with linespoints title "DSDV","DSR.csv" using 1:3 with linespoints title "DSR" 

set terminal pdf
set output "macphy.pdf"
set title "Mac Phy OVerhead"
set xlabel "Simulation Time (Seconds)"
set ylabel "Overhead"
plot "AODV.csv" using 1:22 with linespoints title "AODV", "OLSR.csv" using 1:22 with linespoints title "OLSR","DSDV.csv" using 1:22 with linespoints title "DSDV","DSR.csv" using 1:22 with linespoints title "DSR" 


WE have done the basic simulations.. and plotting of characteristics. 
Similar way , we can do it for other results also.

In the next video, I will be showcasing how to use flowmonitor for plotting the various losses, bitrates in the system or network.

python scripts to read the flowmonitors.

